CREATE TABLE nuke_users (
user_id INT AUTO_INCREMENT PRIMARY KEY,
username VARCHAR(50) NOT NULL UNIQUE,
user_email VARCHAR(50) UNIQUE,
user_password VARCHAR(300),
user_avatar VARCHAR(300),
points INT DEFAULT 0
) ;

CREATE TABLE nuke_question (
user_id INT AUTO_INCREMENT PRIMARY KEY,
userID INT NOT NULL,
askedDate TIMESTAMP NOT NULL DEFAULT NOW(),
title VARCHAR(200),
text VARCHAR(300),
voteValue INT DEFAULT 0,
FULLTEXT(title,text),
FOREIGN KEY (userID) REFERENCES nuke_users(user_id) ON DELETE CASCADE
) ;

CREATE TABLE nuke_question_vote (
questionID INT NOT NULL,
userID INT NOT NULL,
directionOfVote ENUM('DOWN', 'UP'),
FOREIGN KEY (userID) REFERENCES nuke_users(user_id) ON DELETE CASCADE,
FOREIGN KEY (questionID) REFERENCES nuke_question(user_id) ON DELETE CASCADE
) ;

CREATE TABLE nuke_answer (
user_id INT AUTO_INCREMENT PRIMARY KEY,
questionID INT NOT NULL,
userID INT NOT NULL,
askedDate TIMESTAMP NOT NULL DEFAULT NOW(),
text VARCHAR(300),
voteValue INT DEFAULT 0,
isAccepted BIT DEFAULT 0,
FULLTEXT(text),
FOREIGN KEY (userID) REFERENCES nuke_users(user_id) ON DELETE CASCADE,
FOREIGN KEY (questionID) REFERENCES nuke_question(user_id) ON DELETE CASCADE
) ;

CREATE TABLE nuke_answer_vote (
answerID INT NOT NULL,
userID INT NOT NULL,
directionOfVote ENUM('DOWN', 'UP'),
FOREIGN KEY (userID) REFERENCES nuke_users(user_id) ON DELETE CASCADE,
FOREIGN KEY (answerID) REFERENCES nuke_answer(user_id) ON DELETE CASCADE
) ;

CREATE TABLE nuke_tag (
	user_id INT AUTO_INCREMENT PRIMARY KEY,
    isDisabled BIT DEFAULT 0,
    name VARCHAR(20)
);

create table nuke_question_tag (
	questionID INT,
    tagID INT,
    FOREIGN KEY (questionID) REFERENCES nuke_question(user_id) ON DELETE CASCADE,
    FOREIGN KEY (tagID) REFERENCES nuke_tag(user_id) ON DELETE CASCADE
);

insert into nuke_tag (name) values ('python'), ('php'), ('c++'), ('javascript'), ('sql')
